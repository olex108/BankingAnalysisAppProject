import pandas
import pytest


@pytest.fixture
def transactions_df() -> pandas.DataFrame:
    return pandas.DataFrame(
        [
            {
                "Дата операции": pandas.Timestamp("2021-12-01 23:40:34"),
                "Дата платежа": "02.12.2021",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -1.07,
                "Валюта операции": "RUB",
                "Сумма платежа": -1.07,
                "Валюта платежа": "RUB",
                "Кэшбэк": None,
                "Категория": "Каршеринг",
                "MCC": 7512.0,
                "Описание": "Ситидрайв",
                "Бонусы (включая кэшбэк)": 0,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 1.07,
            },
            {
                "Дата операции": pandas.Timestamp("2021-12-01 23:40:34"),
                "Дата платежа": "01.12.2021",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -99.22,
                "Валюта операции": "RUB",
                "Сумма платежа": -99.22,
                "Валюта платежа": "RUB",
                "Кэшбэк": None,
                "Категория": "Супермаркеты",
                "MCC": 5411.0,
                "Описание": "Дикси",
                "Бонусы (включая кэшбэк)": 1,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 99.22,
            },
            {
                "Дата операции": pandas.Timestamp("2021-12-01 23:40:34"),
                "Дата платежа": "01.12.2021",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -199.0,
                "Валюта операции": "RUB",
                "Сумма платежа": -199.0,
                "Валюта платежа": "RUB",
                "Кэшбэк": None,
                "Категория": "Дом и ремонт",
                "MCC": 5211.0,
                "Описание": "Строитель",
                "Бонусы (включая кэшбэк)": 3,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 199.0,
            },
            {
                "Дата операции": pandas.Timestamp("2021-12-01 23:40:34"),
                "Дата платежа": "01.12.2021",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -99.0,
                "Валюта операции": "RUB",
                "Сумма платежа": -99.0,
                "Валюта платежа": "RUB",
                "Кэшбэк": None,
                "Категория": "Фастфуд",
                "MCC": 5814.0,
                "Описание": "IP Yakubovskaya M.V.",
                "Бонусы (включая кэшбэк)": 1,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 99.0,
            },
        ]
    )


@pytest.fixture
def transactions_df_persons() -> pandas.DataFrame:
    return pandas.DataFrame(
        [
            {
                "Дата операции": pandas.Timestamp("2021-12-01 23:40:34"),
                "Дата платежа": "02.12.2021",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -1.07,
                "Валюта операции": "RUB",
                "Сумма платежа": -1.07,
                "Валюта платежа": "RUB",
                "Кэшбэк": None,
                "Категория": "Каршеринг",
                "MCC": 7512.0,
                "Описание": "Ситидрайв",
                "Бонусы (включая кэшбэк)": 0,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 1.07,
            },
            {
                "Дата операции": pandas.Timestamp("2021-12-01 23:40:34"),
                "Дата платежа": "01.12.2021",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -99.22,
                "Валюта операции": "RUB",
                "Сумма платежа": -99.22,
                "Валюта платежа": "RUB",
                "Кэшбэк": None,
                "Категория": "Супермаркеты",
                "MCC": 5411.0,
                "Описание": "Дикси",
                "Бонусы (включая кэшбэк)": 1,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 99.22,
            },
            {
                "Дата операции": pandas.Timestamp("2021-12-01 23:40:34"),
                "Дата платежа": "01.12.2021",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -199.0,
                "Валюта операции": "RUB",
                "Сумма платежа": -199.0,
                "Валюта платежа": "RUB",
                "Кэшбэк": None,
                "Категория": "Дом и ремонт",
                "MCC": 5211.0,
                "Описание": "Строитель",
                "Бонусы (включая кэшбэк)": 3,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 199.0,
            },
            {
                "Дата операции": pandas.Timestamp("2021-12-01 23:40:34"),
                "Дата платежа": "01.12.2021",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -99.0,
                "Валюта операции": "RUB",
                "Сумма платежа": -99.0,
                "Валюта платежа": "RUB",
                "Кэшбэк": None,
                "Категория": "Фастфуд",
                "MCC": 5814.0,
                "Описание": "IP Yakubovskaya M.V.",
                "Бонусы (включая кэшбэк)": 1,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 99.0,
            },
            {
                "Дата операции": "31.12.2021 00:12:53",
                "Дата платежа": "31.12.2021",
                "Номер карты": "1",
                "Статус": "OK",
                "Сумма операции": -800.0,
                "Валюта операции": "RUB",
                "Сумма платежа": -800.0,
                "Валюта платежа": "RUB",
                "Кэшбэк": "1",
                "Категория": "Переводы",
                "MCC": "1",
                "Описание": "Константин Л.",
                "Бонусы (включая кэшбэк)": 0,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 800.0,
            },
            {
                "Дата операции": "30.12.2021 22:22:03",
                "Дата платежа": "31.12.2021",
                "Номер карты": "1",
                "Статус": "OK",
                "Сумма операции": -20000.0,
                "Валюта операции": "RUB",
                "Сумма платежа": -20000.0,
                "Валюта платежа": "RUB",
                "Кэшбэк": "1",
                "Категория": "Переводы",
                "MCC": "1",
                "Описание": "Константин Л.",
                "Бонусы (включая кэшбэк)": 0,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 20000.0,
            },
        ]
    )


@pytest.fixture
def transactions_investment_list() -> list:
    return [
        {
            "Дата операции": "2021-12-31",
            "Сумма операции": -850.0,
        },
        {
            "Дата операции": "2021-12-30",
            "Сумма операции": -2050.0,
        },
    ]


@pytest.fixture
def transactions_empty_df() -> pandas.DataFrame:
    return pandas.DataFrame(
        {
            "Дата операции": [],
            "Дата платежа": [],
            "Номер карты": [],
            "Статус": [],
            "Сумма операции": [],
            "Валюта операции": [],
            "Сумма платежа": [],
            "Валюта платежа": [],
            "Кэшбэк": [],
            "Категория": [],
            "MCC": [],
            "Описание": [],
            "Бонусы (включая кэшбэк)": [],
            "Округление на инвесткопилку": [],
            "Сумма операции с округлением": [],
        }
    )
